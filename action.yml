# action.yml
name: 'ocicl'
description: 'Publish an ocicl artifact'
runs:
  using: "composite"
  steps:
    - name: Install SBCL
      run: |
        curl -L -O "https://downloads.sourceforge.net/project/sbcl/sbcl/2.3.4/sbcl-2.3.4-x86-64-linux-binary.tar.bz2"
        tar -xf sbcl-2.3.4-x86-64-linux-binary.tar.bz2
        cd sbcl-2.3.4-x86-64-linux
        ./install.sh --prefix=$HOME
        cd ..
        rm -rf sbcl-2.3.4-x86-64-linux-binary.tar.bz2 sbcl-2.3.4-x86-64-linux
      shell: bash
    - name: Install the ocicl client
      run: |
        set -x
        git clone --depth=1 https://github.com/ocicl/ocicl-client.git
        echo "(require :asdf) (push #p\"$(cd ocicl-client; pwd)/\" asdf:*central-registry*) (asdf:load-system \"ocicl\")" > ~/.sbclrc ;
        ~/bin/sbcl --eval "(quit)"
        find ~/.local
      shell: bash
    - name: Install ORAS
      run: |
        ORAS_VERSION="1.0.0"
        curl -LO "https://github.com/oras-project/oras/releases/download/v${ORAS_VERSION}/oras_${ORAS_VERSION}_linux_amd64.tar.gz"
        mkdir -p oras-install/
        tar -zxf oras_${ORAS_VERSION}_*.tar.gz -C oras-install/
        sudo mv oras-install/oras /usr/local/bin/
        rm -rf oras_${ORAS_VERSION}_*.tar.gz oras-install/
      shell: bash
    - uses: actions/checkout@v3
    - run: |
        grep source README.org;
        if [ $? -eq 0 ]; then
          NAME=$(head -1 README.org | cut -d\  -f2)
          PROTOCOL=$(grep source README.org | awk '{ print $4 }' | cut -d: -f1) ;
          URI=$(grep source README.org | awk '{ print $4 }' | cut -d: -f2-) ;
          SYSTEMS=$(grep systems README.org | cut -f3 -d \|) ;
          mkdir src
          cd src
          case ${PROTOCOL} in
            git) git clone ${URI} ;
                 VERSION=$(date +%Y%m%d)-$(grep commit ../README.org | awk '{ print $4 }') ;
                 SRCDIR=$(ls) ;
                 cd ${SRCDIR} ;
                 git reset --hard ${COMMIT} ;
                 rm -rf .git* ;
                 cd .. ;
                 tar cvfz ${NAME}-${VERSION}.tar.gz ${SRCDIR} ;
                 ;;
            file) VERSION=$(grep version ../README.org | awk '{ print $4 }') ;
                  curl -L -o ${NAME}-${VERSION}.tar.gz ${URI} ;
                  tar xvf ${NAME}-${VERSION}.tar.gz
                  SRCDIR=$(ls -1 | grep -v tar.gz)
                  ;;
            *) echo Unrecognized PROTOCOL ${PROTOCOL} ;
               exit 1 ;
               ;;
          esac ;
          for S in ${SYSTEMS}; do
            echo ================================================================================
            echo ${S}
            echo ================================================================================
            echo "(require :asdf) (push #p\"$(cd ~/ocicl-client; pwd)/\" asdf:*central-registry*) (push #p\"$(cd ${SRCDIR}; pwd)/\" asdf:*central-registry*) (asdf:load-system \"ocicl\") (asdf:load-system \"${S}\") (quit)" > ~/.sbclrc ;
            cat ~/.sbclrc
            ~/bin/sbcl ;
          done;
          set -x
          echo ${{ github.token }} | oras login ghcr.io -u ${{ github.actor }} --password-stdin
          oras push ghcr.io/ocicl/${NAME}:latest ${NAME}-${VERSION}.tar.gz:application/vnd.uknown/layer.v1+gzip
        fi
      shell: bash
    - run: $HOME/bin/sbcl --version
      shell: bash
