# action.yml
name: 'ocicl'
description: 'Publish an ocicl artifact'
inputs:
  gpg_signing_key:
    required: true
  gpg_public_key:
    required: true
runs:
  using: "composite"
  steps:
    - name: Run
      shell: bash
      run: podman run --rm --tty --interactive  --volume ${{ github.workspace }}:/github/workspace:z ghcr.io/ocicl/ocicl-sandbox:latest
    - uses: actions/checkout@v3
    - run: |
        echo ==== .sbclrc ===================================================================
        cat ~/.sbclrc
        # Build each system
        for S in ${SYSTEMS}; do
          echo ================================================================================
          echo Building ${S}
          echo ================================================================================ ;
          ~/bin/sbcl --non-interactive --eval "(progn (asdf:load-system \"${S}\") (quit))";
        done;
        set -x
        echo ${{ github.token }} | ocicl-oras login ghcr.io -u ${{ github.actor }} --password-stdin
        for S in ${SYSTEMS}; do
          S=$(echo ${S} | sed 's/+$/_plus/g' | sed 's/+/_plus_/g')
          ocicl-oras push ghcr.io/ocicl/${S}:${VERSION} ${NAME}-${VERSION}.tar.gz:application/vnd.uknown/layer.v1+gzip
          ocicl-oras tag ghcr.io/ocicl/${S}:${VERSION} latest
        done
        echo ${VERSION} > ~/_00_OCICL_VERSION
        echo ${SYSTEMS} > ~/SYSTEMS
      fi
      shell: bash
    - name: Import GPG key
      run: |
        echo $GPG_SIGNING_KEY | base64 -d | gpg --batch --import
        echo $GPG_PUBLIC_KEY | base64 -d > pub.key
      shell: bash
      env:
        GPG_SIGNING_KEY: '${{ inputs.gpg_signing_key }}'
        GPG_PUBLIC_KEY: '${{ inputs.gpg_public_key }}'
    - name: Sign the published artifact
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        set -x
        NAME=$(head -1 README.org | cut -d\  -f2) ;
        FILE=$(cd src; ls ${NAME}-*.tar.gz)
        gpg -k
        gpg --armor -u "ocicl-tarball-signer" --output ${FILE}.sig --detach-sig src/${NAME}-*.tar.gz
        for S in $(cat ~/SYSTEMS); do
          S=$(echo ${S} | sed 's/+$/_plus/g' | sed 's/+/_plus_/g')
          ocicl-oras push ghcr.io/ocicl/${S}.sig:latest ${FILE}.sig:application/vnd.uknown/layer.v1+gzip
          ocicl-oras tag ghcr.io/ocicl/${S}.sig:latest $(cat ~/_00_OCICL_VERSION)
        done
        rekor-cli upload --signature ${FILE}.sig --public-key pub.key --artifact src/${NAME}-*.tar.gz
      shell: bash
