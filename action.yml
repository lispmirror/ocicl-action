# action.yml
name: 'ocicl'
description: 'Publish an ocicl artifact'
runs:
  using: "composite"
  steps:
    - run: curl -L -O "https://downloads.sourceforge.net/project/sbcl/sbcl/2.3.4/sbcl-2.3.4-x86-64-linux-binary.tar.bz2" && curl -L -O https://beta.quicklisp.org/quicklisp.lisp && tar -xf sbcl-2.3.4-x86-64-linux-binary.tar.bz2 && cd sbcl-2.3.4-x86-64-linux && ./install.sh --prefix=$HOME && cd .. && rm -rf sbcl-2.3.4-x86-64-linux-binary.tar.bz2 sbcl-2.3.4-x86-64-linux
      shell: bash
    - uses: actions/checkout@v3
    - run: |
        grep source README.org;
        if [ $? -eq 0 ]; then
          PROTOCOL=$(grep source README.org | awk '{ print $4 }' | cut -d: -f1) ;
          URI=$(grep source README.org | awk '{ print $4 }' | cut -d: -f2-) ;
          SYSTEMS=$(grep systems README.org | cut -f3 -d \|) ;
          mkdir src
          cd src
          case ${PROTOCOL} in
            git) git clone ${URI} ;
                 VERSION=$(date +%Y%m%d)-$(grep commit ../README.org | awk '{ print $4 }') ;
                 SRCDIR=$(ls) ;
                 cd ${SRCDIR} ;
                 git reset --hard ${COMMIT} ;
                 rm -rf .git* ;
                 cd .. ;
                 ;;
            file) curl -L -O ${URI} ;
                  VERSION=$(grep source ../README.org | awk '{ print $4 }') ;
                  ;;
            *) echo Unrecognized PROTOCOL ;
               exit 1 ;
               ;;
          esac ;
          tar cvfz ${SRCDIR}-${VERSION}.tar.gz ${SRCDIR} ;
          for S in ${SYSTEMS}; do
            echo ================================================================================
            echo ${S}
            echo ================================================================================
            echo "(require :asdf) (push #p\"$(cd ${SRCDIR}; pwd)/\" asdf:*central-registry*) (asdf:load-system \"${S}\") (quit)" > ~/.sbclrc ;
            ~/bin/sbcl ;
          done;
          echo *****************************************************************************
          echo *****************************************************************************
          echo *****************************************************************************
          VERSION="1.0.0"
          curl -LO "https://github.com/oras-project/oras/releases/download/v${VERSION}/oras_${VERSION}_linux_amd64.tar.gz"
          mkdir -p oras-install/
          tar -zxf oras_${VERSION}_*.tar.gz -C oras-install/
          sudo mv oras-install/oras /usr/local/bin/
          rm -rf oras_${VERSION}_*.tar.gz oras-install/
          ls -l oras-install
        fi
      shell: bash
    - run: $HOME/bin/sbcl --version
      shell: bash
